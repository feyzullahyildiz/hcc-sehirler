{"version":3,"sources":["config.js","index.js"],"names":["url","module","exports","cities","require","centroids","config","map","document","querySelector","mapHeader","totalPeopleCountDom","menu","city","categoryA","categoryB","categoryC","categoryTotal","countOfMosque","loadSvg","data","xSpace","ySpace","pointArray","totalMosqueCount","totalPeopleCount","index","features","feature","code","properties","ILKOD","name","NAME","geometry","coordinates","x","y","parseInt","polygon","points","_x","_y","sayi","totalPeople","a","b","c","JSON","stringify","success","isNaN","innerHTML","svg","citiesPolygons","querySelectorAll","oldPolygons","onEnter","forEach","oldPolygon","style","fill","push","parse","opacity","cityData","addEventListener","fetch","then","json"],"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","file":"hcc-cities.e31bb0bc.map","sourceRoot":"..","sourcesContent":["const url = 'https://api.myjson.com/bins/1cdh68'\n\n\nmodule.exports = {\n    url\n}","const cities = require('./iller.json')\nconst centroids = require('./iller-orta.json')\nconst config = require('./config')\nconst map = document.querySelector('#turkey-svg-cities-continer .map-container .map')\nconst mapHeader = document.querySelector('#turkey-svg-cities-continer .map-container .map-header .map-header-total-mosque-count')\nconst totalPeopleCountDom = document.querySelector('#turkey-svg-cities-continer .map-container .map-header .map-header-total-people-count')\nconst menu = document.querySelector('#turkey-svg-cities-continer .map-menu')\n\nconst city = menu.querySelector('.map-menu-city')\nconst categoryA = menu.querySelector('.map-menu-category.a')\nconst categoryB = menu.querySelector('.map-menu-category.b')\nconst categoryC = menu.querySelector('.map-menu-category.c')\nconst categoryTotal = menu.querySelector('.map-menu-category-total')\nconst countOfMosque = menu.querySelector('.map-menu-mosque-count')\n// [ 2857405, 4275017 ], [ 2857405, 5175729 ], [ 4989109, 5175729 ], [ 4989109, 4275017 ], [ 2857405, 4275017 ] //bbox\nconst loadSvg = function(data){\n    const xSpace = 1420\n    const ySpace = 2590\n    let pointArray = ''\n    let totalMosqueCount = 0\n    let totalPeopleCount = 0\n    for(const index in cities.features){\n        const feature = cities.features[index]\n        const code = centroids.features[index].properties.ILKOD\n        const name = centroids.features[index].properties.NAME\n        let [x, y] = centroids.features[index].geometry.coordinates\n        x = parseInt((x/2000) - xSpace)\n        y = parseInt(ySpace - (y/2000))\n        pointArray += `<g>`\n        for (const polygon of feature.geometry.coordinates) {\n            let points = ''\n            for (const [_x, _y] of polygon[0]) {\n                points += `${parseInt((_x/2000) - xSpace)},${parseInt(ySpace - (_y/2000))} `\n            }\n            pointArray +=`<polygon points=\"${points}\"/>`\n        }\n        if(data[code] && data[code].sayi){\n            totalMosqueCount += data[code].sayi\n        }\n        let totalPeople = data[code] ? data[code].a + data[code].b + data[code].c : '-'\n        if(totalPeople > 0){\n            totalPeopleCount += totalPeople\n        }\n        pointArray += `\n        <text x=\"${x}\" y=\"${y}\" fill=\"white\">\n            <tspan text-anchor=\"middle\">${totalPeople}</tspan>\n            </text>\n            <desc>${data[code] ? JSON.stringify({...data[code], name, success: true}): JSON.stringify({name})}</desc>\n        </g>`\n    }\n    if(!isNaN(totalMosqueCount)){\n        mapHeader.innerHTML = 'Cami Sayısı: ' + totalMosqueCount\n        totalPeopleCountDom.innerHTML = 'Kayıt Sayısı: ' + totalPeopleCount\n    }\n    let svg = `\n    <svg viewBox=\"0 0 1080 460\" width=\"100%\">\n    ${pointArray}\n    </svg>\n    `\n    map.innerHTML = svg\n    \n    const citiesPolygons = map.querySelectorAll('svg g')\n    let oldPolygons\n    const onEnter = function(){\n        if(oldPolygons){\n            oldPolygons.forEach(oldPolygon => {\n                oldPolygon.style.fill = ''\n            })\n        }\n        oldPolygons = []\n        this.querySelectorAll('polygon').forEach(polygon => {\n            oldPolygons.push(polygon)\n            polygon.style.fill = '#f49225'\n        })\n        const data = this.querySelector('desc')\n        if(data.innerHTML && JSON.parse(data.innerHTML).success){\n            // menu.style.display = 'flex'\n            menu.style.opacity = 1\n            const cityData = JSON.parse(data.innerHTML)\n            city.innerHTML = cityData.name\n            categoryA.innerHTML = cityData.a\n            categoryB.innerHTML = cityData.b\n            categoryC.innerHTML = cityData.c\n            categoryTotal.innerHTML = cityData.a + cityData.b + cityData.c\n            countOfMosque.innerHTML = cityData.sayi\n        }else{\n            city.innerHTML = JSON.parse(data.innerHTML).name\n            categoryA.innerHTML = 0\n            categoryB.innerHTML = 0\n            categoryC.innerHTML = 0\n            categoryTotal.innerHTML = 0\n            countOfMosque.innerHTML = 0\n        }\n    }\n    citiesPolygons.forEach(city => {\n        city.addEventListener('click', onEnter)\n    })\n}\n\nfetch(config.url).then(x => x.json()).then(data => {\n    // delete data[\"1\"]\n    // delete data[\"2\"]\n    // delete data[\"3\"]\n    loadSvg(data)\n})"]}