{"version":3,"sources":["config.js","index.js"],"names":["url","module","exports","cities","require","centroids","config","map","document","querySelector","mapHeader","totalPeopleCountDom","menu","link","city","categoryA","categoryB","categoryC","categoryTotal","countOfMosque","loadSvg","data","xSpace","ySpace","pointArray","totalMosqueCount","totalPeopleCount","index","features","feature","code","properties","ILKOD","name","NAME","geometry","coordinates","x","y","parseInt","polygon","points","_x","_y","sayi","totalPeople","a","b","c","JSON","stringify","success","isNaN","innerHTML","svg","selectedData","undefined","citiesPolygons","querySelectorAll","onEnter","style","opacity","parse","cityData","onLeave","onMove","event","isMobile","window","innerWidth","touches","clientX","left","top","clientY","right","pointerEvents","onClick","location","showOnWebSiteButton","addEventListener","onTouch","display","preventDefault","stopPropagation","bind","forEach","fetch","then","json"],"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","file":"hcc-cities.e31bb0bc.map","sourceRoot":"..","sourcesContent":["const url = 'https://api.myjson.com/bins/1cdh68'\n\n\nmodule.exports = {\n    url\n}","const cities = require('./iller.json')\nconst centroids = require('./iller-orta.json')\nconst config = require('./config')\nconst map = document.querySelector('#turkey-svg-cities-continer .map-container .map')\nconst mapHeader = document.querySelector('#turkey-svg-cities-continer .map-container .map-header .map-header-total-mosque-count')\nconst totalPeopleCountDom = document.querySelector('#turkey-svg-cities-continer .map-container .map-header .map-header-total-people-count')\nconst menu = document.querySelector('#turkey-svg-cities-continer .map-menu')\nconst link = 'http://a.haydicocuklarcamiye.com/camiler/?sid='\nconst city = menu.querySelector('.map-menu-city')\nconst categoryA = menu.querySelector('.map-menu-category.a')\nconst categoryB = menu.querySelector('.map-menu-category.b')\nconst categoryC = menu.querySelector('.map-menu-category.c')\nconst categoryTotal = menu.querySelector('.map-menu-category-total')\nconst countOfMosque = menu.querySelector('.map-menu-mosque-count')\n// [ 2857405, 4275017 ], [ 2857405, 5175729 ], [ 4989109, 5175729 ], [ 4989109, 4275017 ], [ 2857405, 4275017 ] //bbox\nconst loadSvg = function (data) {\n    const xSpace = 1420\n    const ySpace = 2590\n    let pointArray = ''\n    let totalMosqueCount = 0\n    let totalPeopleCount = 0\n    for (const index in cities.features) {\n        const feature = cities.features[index]\n        const code = centroids.features[index].properties.ILKOD\n        const name = centroids.features[index].properties.NAME\n        let [x, y] = centroids.features[index].geometry.coordinates\n        x = parseInt((x / 2000) - xSpace)\n        y = parseInt(ySpace - (y / 2000))\n        pointArray += `<g>`\n        for (const polygon of feature.geometry.coordinates) {\n            let points = ''\n            for (const [_x, _y] of polygon[0]) {\n                points += `${parseInt((_x / 2000) - xSpace)},${parseInt(ySpace - (_y / 2000))} `\n            }\n            pointArray += `<polygon points=\"${points}\"/>`\n        }\n        if (data[code] && data[code].sayi) {\n            totalMosqueCount += data[code].sayi\n        }\n        let totalPeople = data[code] ? data[code].a + data[code].b + data[code].c : '-'\n        if (totalPeople > 0) {\n            totalPeopleCount += totalPeople\n        }\n        pointArray += `\n        <text x=\"${x}\" y=\"${y}\" fill=\"white\">\n            <tspan text-anchor=\"middle\">${totalPeople}</tspan>\n            </text>\n            <desc>${data[code] ? JSON.stringify({ ...data[code], name, success: true, code }) : JSON.stringify({ name, code })}</desc>\n        </g>`\n    }\n    if (!isNaN(totalMosqueCount)) {\n        mapHeader.innerHTML = 'Cami Sayısı: ' + totalMosqueCount\n        totalPeopleCountDom.innerHTML = 'Kayıt Sayısı: ' + totalPeopleCount\n    }\n    let svg = `\n    <svg viewBox=\"0 0 1080 460\" width=\"100%\">\n    ${pointArray}\n    </svg>\n    `\n    map.innerHTML = svg\n    let selectedData = undefined\n    const citiesPolygons = map.querySelectorAll('svg g')\n    const onEnter = function () {\n        menu.style.opacity = 1\n        selectedData = this.querySelector('desc')\n        if (selectedData.innerHTML && JSON.parse(selectedData.innerHTML).success) {\n            const cityData = JSON.parse(selectedData.innerHTML)\n            city.innerHTML = cityData.name\n            categoryA.innerHTML = cityData.a\n            categoryB.innerHTML = cityData.b\n            categoryC.innerHTML = cityData.c\n            categoryTotal.innerHTML = cityData.a + cityData.b + cityData.c\n            countOfMosque.innerHTML = cityData.sayi\n        } else {\n            city.innerHTML = JSON.parse(selectedData.innerHTML).name\n            categoryA.innerHTML = 0\n            categoryB.innerHTML = 0\n            categoryC.innerHTML = 0\n            categoryTotal.innerHTML = 0\n            countOfMosque.innerHTML = 0\n        }\n    }\n    const onLeave = function () { \n        menu.style.opacity = 0.0\n    }\n    const onMove = function (event, isMobile) {\n        if(isMobile){\n            if ((window.innerWidth / 2) > event.touches[0].clientX) {\n                menu.style.left = event.touches[0].clientX + 20\n                menu.style.top = event.touches[0].clientY\n                menu.style.right = 'auto'\n            } else {\n                menu.style.right = window.innerWidth - event.touches[0].clientX + 20\n                menu.style.top = event.touches[0].clientY\n                menu.style.left = 'auto'\n            }\n            menu.style.pointerEvents = 'all'\n            return\n        }\n        if ((window.innerWidth / 2) > event.clientX) {\n            menu.style.left = event.clientX + 20\n            menu.style.top = event.clientY\n            menu.style.right = 'auto'\n        } else {\n            menu.style.right = window.innerWidth - event.clientX + 20\n            menu.style.top = event.clientY\n            menu.style.left = 'auto'\n        }\n\n    }\n    const onClick = function(){\n        const data = this.querySelector('desc')\n        const code = JSON.parse(data.innerHTML).code\n        location = link + code\n    }\n    const showOnWebSiteButton = document.querySelector('.map-menu .map-menu-show-on-web-site')\n    showOnWebSiteButton.addEventListener('click', function(event){\n        // console.log('selectedData', selectedData)\n        const code = JSON.parse(selectedData.innerHTML).code\n        location = link + code\n    })\n    const onTouch = function(event){\n        showOnWebSiteButton.style.display = 'flex'\n        event.preventDefault()\n        event.stopPropagation()\n        onEnter.bind(this, event)()\n        onMove.bind(this, event, true)()\n    }\n    citiesPolygons.forEach(city => {\n        city.addEventListener('touchstart', onTouch)\n        city.addEventListener('click', onClick)\n        city.addEventListener('mouseenter', onEnter)\n        city.addEventListener('mouseleave', onLeave)\n        city.addEventListener('mousemove', onMove)\n    })\n}\n\nfetch(config.url).then(x => x.json()).then(data => {\n    // delete data[\"1\"]\n    // delete data[\"2\"]\n    // delete data[\"3\"]\n    loadSvg(data)\n})"]}