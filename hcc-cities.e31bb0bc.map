{"version":3,"sources":["config.js","index.js"],"names":["url","module","exports","cities","require","centroids","config","container","document","querySelector","menu","loadSvg","data","xSpace","ySpace","pointArray","index","features","feature","code","properties","ILKOD","name","NAME","geometry","coordinates","x","y","parseInt","polygon","points","_x","_y","a","b","c","JSON","stringify","svg","innerHTML","querySelectorAll","city","categoryA","categoryB","categoryC","categoryTotal","countOfMosque","citiesPolygons","onEnter","forEach","style","fill","display","cityData","parse","sayi","onLeave","onMove","event","left","clientX","top","clientY","addEventListener","fetch","then","json"],"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","file":"hcc-cities.e31bb0bc.map","sourceRoot":"..","sourcesContent":["const url = 'https://api.myjson.com/bins/1cdh68'\n\n\nmodule.exports = {\n    url\n}","const cities = require('./iller.json')\nconst centroids = require('./iller-orta.json')\nconst config = require('./config')\nconst container = document.querySelector('#turkey-svg-citiescontiner .container')\nconst menu = document.querySelector('#turkey-svg-citiescontiner .menu')\n\n// [ 2857405, 4275017 ], [ 2857405, 5175729 ], [ 4989109, 5175729 ], [ 4989109, 4275017 ], [ 2857405, 4275017 ] //bbox\nconst loadSvg = function(data){\n    const xSpace = 1420\n    const ySpace = 2590\n    let pointArray = ''\n    for(const index in cities.features){\n        const feature = cities.features[index]\n        const code = centroids.features[index].properties.ILKOD\n        const name = centroids.features[index].properties.NAME\n        let [x, y] = centroids.features[index].geometry.coordinates\n        x = parseInt((x/2000) - xSpace)\n        y = parseInt(ySpace - (y/2000))\n        pointArray += `<g>`\n        for (const polygon of feature.geometry.coordinates) {\n            let points = ''\n            for (const [_x, _y] of polygon[0]) {\n                points += `${parseInt((_x/2000) - xSpace)},${parseInt(ySpace - (_y/2000))} `\n            }\n            pointArray +=`<polygon points=\"${points}\"/>`\n        }\n        pointArray += `\n        <text x=\"${x}\" y=\"${y}\" fill=\"white\">\n            <tspan text-anchor=\"middle\">${data[code] ? (data[code].a + data[code].b + data[code].c): '-'}</tspan>\n            </text>\n            <desc>${data[code] ? JSON.stringify({...data[code], name}): ''}</desc>\n        </g>`\n    }\n    let svg = `\n    <svg viewBox=\"0 0 1080 460\" width=\"100%\">\n    ${pointArray}\n    </svg>\n    `\n    container.innerHTML = svg\n    \n    const [city, categoryA, categoryB, categoryC, categoryTotal, countOfMosque] = menu.querySelectorAll('li span')\n    // console.log('city', city)\n    const citiesPolygons = container.querySelectorAll('svg g')\n    const onEnter = function(){\n        this.querySelectorAll('polygon').forEach(polygon => {\n            polygon.style.fill = '#ff922b'\n        })\n        const data = this.querySelector('desc')\n        if(data.innerHTML){\n            menu.style.display = 'flex'\n            const cityData = JSON.parse(data.innerHTML)\n            city.innerHTML = cityData.name\n            categoryA.innerHTML = cityData.a\n            categoryB.innerHTML = cityData.b\n            categoryC.innerHTML = cityData.c\n            categoryTotal.innerHTML = cityData.a + cityData.b + cityData.c\n            countOfMosque.innerHTML = cityData.sayi\n        }\n    }\n    const onLeave = function(){\n        this.querySelectorAll('polygon').forEach(polygon => {\n            polygon.style.fill = ''\n        })\n        menu.style.display = 'none'\n    }\n    const onMove = function(event){\n        menu.style.left = event.clientX + 30\n        menu.style.top = event.clientY\n    }\n    citiesPolygons.forEach(city => {\n        city.addEventListener('mouseenter', onEnter)\n        city.addEventListener('mouseleave', onLeave)\n        city.addEventListener('mousemove', onMove)\n    })\n}\n\nfetch(config.url).then(x => x.json()).then(data => {\n    delete data[\"1\"]\n    delete data[\"2\"]\n    delete data[\"3\"]\n    loadSvg(data)\n})"]}